#!/usr/bin/env node

'use strict';

process.title = 'bcoin';

if (process.argv.indexOf('--help') !== -1
    || process.argv.indexOf('-h') !== -1) {
  console.error('See the bcoin docs at: https://github.com/bcoin-org/bcoin/tree/master/docs.');
  process.exit(1);
  throw new Error('Could not exit.');
}

if (process.argv.indexOf('--version') !== -1
    || process.argv.indexOf('-v') !== -1) {
  const pkg = require('../package.json');
  console.log(pkg.version);
  process.exit(0);
  throw new Error('Could not exit.');
}

const FullNode = require('../lib/node/fullnode');
const DB = require('bmongo');

const node = new FullNode({
  file: false,
  argv: true,
  env: true,
  logFile: false,
  logConsole: true,
  logLevel: 'debug',
  logTimestamps: true,
  memory: true,
  workers: true,
  listen: true,
  selfish: true,
  checkpoints: false,
  indexFull: false,
  slowMode: true,
  sporks: false,
  //indexTX: true,
  //indexAddress: true,
  loader: require
});

const api = new DB({
  dbhost: '192.168.1.73',
  dbname: 'bcoin-mongo'
});

// Temporary hack
//if (!node.config.bool('no-wallet') && !node.has('walletdb')) {
//  const plugin = require('../lib/wallet/plugin');
//  node.use(plugin);
//}

process.on('unhandledRejection', (err, promise) => {
  throw err;
});

process.on('SIGINT', async () => {
  await node.close();
});

(async () => {
  await node.ensure();
  await node.open();
  await node.connect();
  await api.open();
  node.startSync();
  node.on('connect', async (entry, block) => {
    console.log('%s (%d) added to chain.', entry.rhash(), entry.height);
    await api.saveBcoinBlock(entry, block);
  });
})().catch((err) => {
  console.error(err.stack);
  process.exit(1);
});
